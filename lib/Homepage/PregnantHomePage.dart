import 'package:baaby_log/Homepage/Pregnant/info2.dart';
import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:intl/intl.dart';
import 'Experts.dart';
import '../Homepage/Pregnant/info1.dart';
import '../Homepage/Pregnant/info2.dart';
import '../Homepage/Pregnant/info3.dart';

class PregnantHomePage extends StatefulWidget {
  const PregnantHomePage({super.key});

  @override
  _PregnantHomePageState createState() => _PregnantHomePageState();
}

class _PregnantHomePageState extends State<PregnantHomePage> {
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  String _dueDate = "Loading...";
  String _dDay = "Calculating...";

  int _textIndex = 0;
  final List<String> _texts = [
    'ÏñºÎ•∏ Î≥¥Í≥† Ïã∂Ïñ¥Ïöî!',
    'ÌûàÏïºÏïÑÏïÑ!',
    'Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî!',
    'ÏóÑÎßàÍ∞Ä Ï†úÏùº Ï¢ãÏïÑ!',
    'Ïö∞Î¶¨ Í≥ß ÎßåÎÇòÏöî!'
  ];

  void _changeText() {
    setState(() {
      _textIndex = (_textIndex + 1) % _texts.length;
    });
  }

  @override
  void initState() {
    super.initState();
    _fetchDueDate();
  }

  Future<void> _fetchDueDate() async {
    User? user = _auth.currentUser;
    if (user != null) {
      DocumentSnapshot<Map<String, dynamic>> userDoc =
          await _firestore.collection('users').doc(user.uid).get();
      if (userDoc.exists && userDoc.data() != null) {
        DateTime dueDate = DateTime.parse(userDoc.data()!['dueDate']);
        setState(() {
          _dueDate = DateFormat('yyyy.MM.dd').format(dueDate);
          _dDay = 'D-${_calculateDday(dueDate)}';
        });
      }
    }
  }

  int _calculateDday(DateTime dueDate) {
    final now = DateTime.now();
    final difference = dueDate.difference(now).inDays;
    return difference;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: SingleChildScrollView(
        child: Center(
          child: Column(
            children: [
              Stack(
                alignment: Alignment.center,
                children: [
                  GestureDetector(
                    onTap: _changeText,
                    child: Image.asset(
                      'assets/PregnantHomePage.png',
                      width: 430,
                      height: 679,
                    ),
                  ),
                  Positioned(
                    top: 110,
                    left: 110,
                    child: Container(
                      width: 200,
                      height: 50,
                      child: const Text(
                        '12Ï£ºÏ∞®',
                        style: TextStyle(
                          color: Color(0xFF2D2D2D),
                          fontSize: 23,
                          fontFamily: 'Pretendard Variable',
                          fontWeight: FontWeight.w500,
                          height: 0,
                        ),
                      ),
                    ),
                  ),
                  Positioned(
                    top: 100,
                    left: 190,
                    child: Container(
                      width: 200,
                      height: 50,
                      child: const Text(
                        'Î™ΩÍ∏ÄÏù¥',
                        style: TextStyle(
                          color: Colors.black,
                          fontSize: 40,
                          fontFamily: 'Pretendard Variable',
                          fontWeight: FontWeight.w700,
                          height: 0,
                        ),
                      ),
                    ),
                  ),
                  Positioned(
                    top: 160,
                    child: Container(
                      width: 200,
                      height: 50,
                      child: Text(
                        _dueDate + ' ÏòàÏ†ï',
                        textAlign: TextAlign.center,
                        style: const TextStyle(
                          color: Color(0xFFFF9C27),
                          fontSize: 18,
                          fontFamily: 'Pretendard Variable',
                          fontWeight: FontWeight.w500,
                          height: 0,
                        ),
                      ),
                    ),
                  ),
                  Positioned(
                    top: 247,
                    child: Container(
                      width: 200,
                      height: 50,
                      child: Text(
                        _texts[_textIndex],
                        textAlign: TextAlign.center,
                        style: const TextStyle(
                          color: Color(0xFF2D2D2D),
                          fontSize: 25,
                          fontFamily: 'Pretendard Variable',
                          fontWeight: FontWeight.w600,
                          height: 0,
                        ),
                      ),
                    ),
                  ),
                  Positioned(
                    top: 552,
                    child: Container(
                      width: 200,
                      height: 50,
                      child: const Text(
                        'ÎßåÎÇòÍ∏∞ÍπåÏßÄ',
                        textAlign: TextAlign.center,
                        style: TextStyle(
                          color: Color(0xFF2D2D2D),
                          fontSize: 20,
                          fontFamily: 'Pretendard Variable',
                          fontWeight: FontWeight.w600,
                          height: 0,
                        ),
                      ),
                    ),
                  ),
                  Positioned(
                    top: 582,
                    child: Container(
                      width: 200,
                      height: 50,
                      child: Text(
                        _dDay,
                        textAlign: TextAlign.center,
                        style: const TextStyle(
                          color: Color(0xFFFF9C27),
                          fontSize: 25,
                          fontFamily: 'Pretendard Variable',
                          fontWeight: FontWeight.w600,
                          height: 0,
                        ),
                      ),
                    ),
                  ),
                ],
              ),
              const SizedBox(height: 40),
              const ScrollCards(),
              const SizedBox(height: 84),
              const Divider(
                thickness: 10,
                height: 67,
                color: Color(0XFFF5F3EF),
              ),
              const Experts(),
            ],
          ),
        ),
      ),
    );
  }
}

// ÏûÑÏã† Ï†Ñ, Ï£ºÏ∞®Î≥Ñ, Ï∂úÏÇ∞ ÌõÑ ÏïàÎÇ¥ÏÇ¨Ìï≠ Ïπ¥Îìú
class ScrollCards extends StatelessWidget {
  const ScrollCards({super.key});

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        const SizedBox(height: 10),
        const Text(
          'Ï£ºÏ∞®Î≥Ñ ÏïàÎÇ¥ÏÇ¨Ìï≠',
          style: TextStyle(
            fontSize: 35,
            fontWeight: FontWeight.w700,
            color: Color(0XFFFFAB47),
          ),
        ),
        const Text(
          '<ÏûÑÏã† 12Ï£ºÏ∞®>',
          style: TextStyle(
            fontSize: 20,
            fontWeight: FontWeight.w600,
            color: Color(0XFF2D2D2D),
          ),
        ),
        const SizedBox(height: 33),
        GestureDetector(
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => const Info1()),
            );
          },
          child: Container(
            width: 370,
            height: 97,
            margin: const EdgeInsets.symmetric(vertical: 8.0),
            decoration: ShapeDecoration(
              color: const Color(0xFFFCFCFC),
              shape: RoundedRectangleBorder(
                side: const BorderSide(width: 1.50, color: Color(0xFFF0F0F0)),
                borderRadius: BorderRadius.circular(15),
              ),
            ),
            child: const Padding(
              padding: EdgeInsets.only(left: 14.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text.rich(
                    TextSpan(
                      children: [
                        TextSpan(
                          text: 'üë∂ ÌÉúÏïÑÏùò Ïã¨Î∞ïÎèô ÏÜåÎ¶¨',
                          style: TextStyle(
                            color: Color(0xFF2D2D2D),
                            fontSize: 17,
                            fontFamily: 'Pretendard Variable',
                            fontWeight: FontWeight.w600,
                          ),
                        ),
                      ],
                    ),
                  ),
                  SizedBox(height: 8.0),
                  Text(
                    'ÏûÑÏã† 12Ï£ºÍ∞Ä ÎêòÎ©¥ ÌÉúÏïÑÏùò Ïã¨Î∞ïÎèô ÏÜåÎ¶¨Î•º Îì§ÏùÑ Ïàò ÏûàÏäµÎãàÎã§.\nÎã§Ïùå ÏÉùÎ¶¨Ìï† ÎïåÍ∞Ä ÎèåÏïÑÏôîÎäîÎç∞ÎèÑ ÏõîÍ≤ΩÏù¥ ÏóÜÎã§Î©¥',
                    style: TextStyle(
                      color: Color(0xFFA7A7A7),
                      fontSize: 15,
                      fontFamily: 'Pretendard Variable',
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                ],
              ),
            ),
          ),
        ),
        const SizedBox(height: 10),
        GestureDetector(
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => const Info2()),
            );
          },
          child: Container(
            width: 370,
            height: 97,
            margin: const EdgeInsets.symmetric(vertical: 8.0),
            decoration: ShapeDecoration(
              color: const Color(0xFFFCFCFC),
              shape: RoundedRectangleBorder(
                side: const BorderSide(width: 1.50, color: Color(0xFFF0F0F0)),
                borderRadius: BorderRadius.circular(15),
              ),
            ),
            child: const Padding(
              padding: EdgeInsets.only(left: 14.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text.rich(
                    TextSpan(
                      children: [
                        TextSpan(
                          text: 'ü§∞ ÏûÑÏã†Î∂ÄÏùò ÌîºÎ∂ÄÏóê ÎÇòÌÉÄÎÇòÎäî Î≥ÄÌôî',
                          style: TextStyle(
                            color: Color(0xFF2D2D2D),
                            fontSize: 17,
                            fontFamily: 'Pretendard Variable',
                            fontWeight: FontWeight.w600,
                          ),
                        ),
                      ],
                    ),
                  ),
                  SizedBox(height: 8.0),
                  Text(
                    'ÏÇ¨ÎûåÏóê Îî∞ÎùºÏÑ† Î≥µÎ∂Ä Ï§ëÏïôÏùò ÌîºÎ∂ÄÍ∞Ä ÎààÏóê ÎùÑÍ≤å Í±∞Î¨¥Ïä§Î¶ÑÌï¥ÏßÄ\nÎ©¥ÏÑú ÌùëÏÑ†Ïù¥ÎùºÍ≥† ÌïòÎäî ÏàòÏßÅÏÑ†Ïù¥ ÏÉùÍ∏∞Í∏∞ÎèÑ ÌïòÍ≥† ÏñºÍµ¥Ïù¥ÎÇò...',
                    style: TextStyle(
                      color: Color(0xFFA7A7A7),
                      fontSize: 15,
                      fontFamily: 'Pretendard Variable',
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                ],
              ),
            ),
          ),
        ),
        const SizedBox(height: 10),
        GestureDetector(
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => const Info3()),
            );
          },
          child: Container(
            width: 370,
            height: 97,
            margin: const EdgeInsets.symmetric(vertical: 8.0),
            decoration: ShapeDecoration(
              color: const Color(0xFFFCFCFC),
              shape: RoundedRectangleBorder(
                side: const BorderSide(width: 1.50, color: Color(0xFFF0F0F0)),
                borderRadius: BorderRadius.circular(15),
              ),
            ),
            child: const Padding(
              padding: EdgeInsets.only(left: 14.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text.rich(
                    TextSpan(
                      children: [
                        TextSpan(
                          text: '‚ùó ÏûÑÏã†Î∂ÄÏùò Ïã†Ï≤¥Ïóê ÎÇòÌÉÄÎÇòÎäî Î≥ÄÌôî',
                          style: TextStyle(
                            color: Color(0xFF2D2D2D),
                            fontSize: 17,
                            fontFamily: 'Pretendard Variable',
                            fontWeight: FontWeight.w600,
                          ),
                        ),
                      ],
                    ),
                  ),
                  SizedBox(height: 8.0),
                  Text(
                    'Î™∏Ïùò Ïª®ÎîîÏÖòÏù¥ Ï¢ãÏïÑÏßÄÎäî Í≤ÉÏùÑ ÎäêÎÅºÍ∏∞ ÏãúÏûëÌï† Í≤ÉÏù¥Îã§.\nÏûÖÎçßÏù¥ ÏÑúÏÑúÌûà ÏÇ¨ÎùºÏßÄÍ≥†, ÏïÑÏßÅÏùÄ Î∞∞Í∞Ä Í∑∏Î¶¨ ÌÅ¨ÏßÄ ÏïäÏïÑÏÑú...',
                    style: TextStyle(
                      color: Color(0xFFA7A7A7),
                      fontSize: 15,
                      fontFamily: 'Pretendard Variable',
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                ],
              ),
            ),
          ),
        ),
      ],
    );
  }
}
